public int countPairs(String str) {
  if (str.length() < 3) return 0;
  else if (str.charAt(0) == str.charAt(2)) return 1 + countPairs(str.substring(1,str.length()));
  else return countPairs(str.substring(1,str.length()));
}

public int countAbc(String str) {
  if (str.length() < 3) return 0;
  else if (str.substring(0,3).equals("abc") || str.substring(0,3).equals("aba")) {
    return 1 + countAbc(str.substring(1,str.length()));
  } else {
    return countAbc(str.substring(1,str.length()));
  }
}

public int count11(String str) {
  if (str.length()<2) return 0 ;
  else {
    if (str.substring(0,2).equals("11")) return 1 + count11(str.substring(2,str.length()));
    else return count11(str.substring(1,str.length()));
  }
}

public String stringClean(String str) {
  if (str.length()<2) return str;
  else {
    if (str.charAt(0)==str.charAt(1)) return stringClean(str.substring(1,str.length()));
    else return str.charAt(0) + stringClean(str.substring(1,str.length()));
  }
}

public int countHi2(String str) {
  if (str.length()<2) return 0;
  else if (str.substring(0,2).equals("hi")) return 1 + countHi2(str.substring(2,str.length()));
  else if (str.length()<3) return 0; // In case there are two non-"hi" characters
  else if (str.substring(0,3).equals("xhi")) return countHi2(str.substring(3,str.length()));
  else return countHi2(str.substring(1,str.length()));
}

public String parenBit(String str) {
  if (str.charAt(0)=='(') {
    if (str.charAt(str.length()-1)==')') return str;
    else return parenBit(str.substring(0,str.length()-1));
  } else return parenBit(str.substring(1,str.length()));
}

public boolean nestParen(String str) {
  if (str.length()==0) return true;
  else if (str.charAt(0)=='(' && str.charAt(str.length()-1)==')') return nestParen(str.substring(1,str.length()-1));
  else return false;
}

public int strCount(String str, String sub) {
  if (str.length()<sub.length()) return 0;
  else if (str.substring(0,sub.length()).equals(sub)) return 1 + strCount(str.substring(sub.length(),str.length()), sub);
  else return strCount(str.substring(1,str.length()), sub);
}

public boolean strCopies(String str, String sub, int n) {
  if(n == 0)  return true;
  else if(str.length() < sub.length()) return false;
  else if(str.substring(0, sub.length()).equals(sub)) return strCopies(str.substring(1), sub, n-1);
  else return strCopies(str.substring(1), sub, n);
}

public int strDist(String str, String sub) {
  if (str.length()<sub.length()) return 0;
  else if (str.substring(0, sub.length()).equals(sub)) {
    if (str.substring(str.length()-sub.length()).equals(sub)) return str.length();
    else return strDist(str.substring(0, str.length()-1), sub);
  } else return strDist(str.substring(1), sub);
}

